# -*- mode: yaml -*-
default_experiment: all
default_data_file: 'runbench.data'

runs:
  max_invocation_time: 6000
  min_iteration_time: 1
  iterations: 100
  invocations: 30

benchmark_suites:
    macro-steady:
      gauge_adapter: RebenchLog
      command: &MACRO_CMD "--jit function_threshold=%(variable)s --jit threshold=%(variable)s -cp Smalltalk:Examples/Benchmarks/Json Examples/Benchmarks/BenchmarkHarness.som --gc %(benchmark)s %(iterations)s "
      variable_values: [957]
      benchmarks:
        - Json:         {extra_args:    25}

    micro-steady:
      gauge_adapter: RebenchLog
      command: &MICRO_STARTUP_CMD "--jit function_threshold=%(variable)s --jit threshold=%(variable)s -cp Smalltalk:Examples/Benchmarks/GraphSearch:Examples/Benchmarks/NBody:Examples/Benchmarks/LanguageFeatures:Examples/Benchmarks/TestSuite Examples/Benchmarks/BenchmarkHarness.som --gc %(benchmark)s %(iterations)s "
      variable_values: [23]
      benchmarks:
        - Bounce:         {extra_args:    350,  variable_values: [57]}
        - BubbleSort:     {extra_args:    500}
        - Fannkuch:       {extra_args:      9,  variable_values: [57]}
        - Fibonacci:      {extra_args:    500}
        - GraphSearch:    {extra_args:    30}
        - List:           {extra_args:    500}
        - Mandelbrot:     {extra_args:    350,  variable_values: [2]}
        - NBody:          {extra_args:    125000}
        - PageRank:       {extra_args:    350}
        - Permute:        {extra_args:    250}
        - Queens:         {extra_args:    250}
        - QuickSort:      {extra_args:    500}
        - Recurse:        {extra_args:    500}
        - Sieve:          {extra_args:    1250, variable_values: [2]}
        - Storage:        {extra_args:    350,  variable_values: [57]}
        - Sum:            {extra_args:    500}
        - TreeSort:       {extra_args:    350}
        - Towers:         {extra_args:    350}

    macro-startup:
      gauge_adapter: RebenchLog
      command: &MACRO_CMD "--jit function_threshold=%(variable)s --jit threshold=%(variable)s -cp Smalltalk:Examples/Benchmarks/Json Examples/Benchmarks/BenchmarkHarness.som --gc %(benchmark)s %(iterations)s "
      variable_values: [957]
      benchmarks:
        - Json:         {extra_args:      1}

    micro-startup:
      gauge_adapter: RebenchLog
      command: &MICRO_STARTUP_CMD "--jit function_threshold=%(variable)s --jit threshold=%(variable)s -cp Smalltalk:Examples/Benchmarks/GraphSearch:Examples/Benchmarks/NBody:Examples/Benchmarks/LanguageFeatures:Examples/Benchmarks/TestSuite Examples/Benchmarks/BenchmarkHarness.som --gc %(benchmark)s %(iterations)s "
      variable_values: [23]
      benchmarks:
        - Bounce:         {extra_args:    10,  variable_values: [57]}
        - BubbleSort:     {extra_args:    10}
        - Fannkuch:       {extra_args:     2,  variable_values: [57]}
        - Fibonacci:      {extra_args:    10}
        - GraphSearch:    {extra_args:    2}
        - List:           {extra_args:    2}
        - Mandelbrot:     {extra_args:    50,  variable_values: [2]}
        - NBody:          {extra_args:  1000}
        - PageRank:       {extra_args:    10}
        - Permute:        {extra_args:    10}
        - Queens:         {extra_args:    10}
        - QuickSort:      {extra_args:    10}
        - Recurse:        {extra_args:    10}
        - Sieve:          {extra_args:    10, variable_values: [2]}
        - Storage:        {extra_args:    10,  variable_values: [57]}
        - Sum:            {extra_args:    10}
        - TreeSort:       {extra_args:    10}
        - Towers:         {extra_args:    10}

    experiment:
      gauge_adapter: PlainSecondsLog
      command: &EXPERIMENT_CMD "-cp Smalltalk:Examples/Benchmarks/CD:Examples/Benchmarks/Json:Examples/Benchmarks/DeltaBlue:Examples/Benchmarks/NBody Examples/Benchmarks/%(benchmark)s "
      invocations: 2000
      benchmarks:
        - Experiment2


executors:
    RPySOM-bc-jit-tier1:
        path: .
        executable: som-bc-jit-tier1
    RPySOM-bc-jit-tier1-no-ic:
        path: .
        executable: som-bc-jit-tier1-no-ic
    RPySOM-bc-jit-tier1-no-ic-no-handler-opt:
        path: .
        executable: som-bc-jit-tier1-no-ic-no-handler-opt
    RPySOM-bc-jit-tier2:
        path: .
        executable: som-bc-jit-tier2
    RPySOM-bc-interp:
        path: .
        executable: som-bc-interp-tier1
    RPySOM-bc-jit-hybrid:
        path: .
        executable: som-bc-jit-hybrid


experiments:
  PySOM:
    description: All benchmarks on RPySOM
    executions:
      - RPySOM-bc-jit-tier1:
          suites:
            - micro-steady
            - macro-steady
            - micro-startup
            - macro-startup
            - experiment
      - RPySOM-bc-jit-tier1-no-ic:
          suites:
            - micro-steady
            - macro-steady
      - RPySOM-bc-jit-tier1-no-ic-no-handler-opt:
          suites:
            - micro-steady
            - macro-steady
      - RPySOM-bc-jit-tier2:
          suites:
            - micro-startup
            - macro-startup
            - experiment
      - RPySOM-bc-interp:
          suites:
            - micro-steady
            - macro-steady
            - micro-startup
            - macro-startup
            - experiment
      - RPySOM-bc-jit-hybrid:
          suites:
            - experiment
